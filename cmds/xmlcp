#!/bin/bash

read -r -d '' sedpy<< EOM
#!/usr/bin/python

# encoding: UTF-8
import sys

def edit_file(fname, action, line, buffer):
    with open(fname, "rb+") as f:
        lists = []
        for l in f:
            lists.append(l)
        buffer += '\n'
        lists.insert(line, buffer)
        f.seek(0, 0)
        f.writelines(lists)

if __name__ == "__main__":
    name = sys.argv[1]
    line = int(sys.argv[2], 0)
    buffer = sys.argv[3]
    edit_file(name, None, line, buffer)
EOM


function get_pattern_files() {
    local pattern=$1
    local workdir=$2
    grep $pattern -rwl $workdir
}

function get_pattern_line() {
    local pattern=$1
    local file=$2
    grep $pattern -wh $file
}

function get_insert_position() {
    local file=$1
    local line=$(grep -E "[ \t]*</resources>" -rnw $1 | cut -d ":" -f 1)
    echo $(($line-1))
    #echo $line
}

function insert_string_to_xml() {
    local line="$1"
    local file="$2"
    echo "-----> $file"
    if [ -f $file ]; then
        local pos=$(get_insert_position $file)
        #sed "$pos a$line" -i $file
        python -c "$sedpy" "$file" "$pos" "$line"
        return
    fi

cat <<EOF > $file
<?xml version="1.0" encoding="utf-8"?>
<resources>
$line
</resources>
EOF
}

function main() {
    local pattern=$1
    local srcdir=$2
    local desdir=$3
    local suffix=$4

    local files=($(get_pattern_files $pattern $srcdir))
    for f in ${files[*]}; do
        local d=$(dirname $f)
        local name=$(basename $f)
        local line=$(get_pattern_line $pattern $f)
        local nd=$desdir/$d
        local nf=$desdir/$d/${name%.*}$suffix.${name#*.}
        echo "--> $f : $line : $nf"
        mkdir -p $nd
        insert_string_to_xml "$line" "$nf"
    done
}

main "$@"
